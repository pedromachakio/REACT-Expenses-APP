{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\Coding\\\\Udemy\\\\REACT\\\\Create React App\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [yearSelected, setSelectedYear] = useState(\"2021\");\n\n  function saveYearChangeHandler(selectedYear) {\n    setSelectedYear(selectedYear);\n  }\n\n  const filteredExpenses = props.items.filter(function (expense) {\n    return expense.date.getFullYear().toString() === yearSelected;\n  });\n\n  let expensesRendered = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found for the Selected Year\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesRendered = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      price: expense.price,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selectedYear: yearSelected,\n        onYearChange: saveYearChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expensesRendered]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"KjTAWsyRlBGEY/xxjz2YoOtGGVQ=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/pedro/Desktop/Coding/Udemy/REACT/Create React App/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpenseFilter","useState","Expenses","props","yearSelected","setSelectedYear","saveYearChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesRendered","length","map","title","price","id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AAEA,WAASK,qBAAT,CAA+BC,YAA/B,EAA6C;AAC3CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD;;AAED,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmB,UAAUC,OAAV,EAAmB;AAC7D,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIW,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,gBAAgB,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACtC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,KAAK,EAAEP,OAAO,CAACQ,KAHjB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADiB,CAAnB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,YAAY,EAAEhB,YADhB;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGS,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCQb,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [yearSelected, setSelectedYear] = useState(\"2021\");\r\n\r\n  function saveYearChangeHandler(selectedYear) {\r\n    setSelectedYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(function (expense) {\r\n    return expense.date.getFullYear().toString() === yearSelected;\r\n  });\r\n\r\n  let expensesRendered = <p>No Expenses Found for the Selected Year</p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expensesRendered = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        price={expense.price}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selectedYear={yearSelected}\r\n          onYearChange={saveYearChangeHandler}\r\n        />\r\n        {expensesRendered}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}